<project name="gsn" default="build" basedir=".">
   
   <target name="all" depends="clean,setup,build">
   </target>
   
   <target name="all.all" depends="test-report,docs"/>
   
   <target name="init" description="initializes properties and initialization tasks">
      <tstamp>
         <format property="TODAY" pattern="yyyy-MMMM-d-'at'-hh-mm-aa" locale="en"/>
      </tstamp>
      
      <property environment="env"/>
      <property name="conf.dir" value="${basedir}/conf"/>
      <property name="build.dir" value="build"/>
      <property name="webapp.dir" value="webapp"/>
      <property name="dswebapp.dir" value="dswebapp"/>
      <property name="merge.dir" value="metadata"/>
      <property name="src.dir" value="src"/>
      <property name="jars" value="jars"/>
      <property name="libdir" value="lib"/>
      <property name="reports" value="reports"/>
      <property name="temp" value="temp"/>
      <property name="maxMemoryUsage" value="64m"/>
      <property name="jar.file" value="gsn-core.jar"/>
      <!--  Enable the following line when you want to use Java Media Framework.
 You should unarchive the complete archive provide by sun and fix the
 following line to point to you path. -->
      <property name="jmf.dir"     value="JMF-2.1.1e" /> 
      <path id="classpath">
         <pathelement location="${build.dir}/jcoverage-classes/"/>
         <pathelement location="${build.dir}/"/>
         <pathelement location="${env.JAVA_HOME}/lib/tools.jar"/>
         <fileset dir="${libdir}">
            <include name="**/*.jar"/>
         </fileset>
         <!--  Enable the following line if you want to use Java Media Frame Work.
  Note that you should first set the jmf.dir path above -->
         <fileset dir="${jmf.dir}">
            <include name="**/*.jar" />
         </fileset> 
      </path>
      <taskdef resource="tasks.properties" classpath="${libdir}/jcoverage.jar"/>
      <!--    <taskdef name="documentdoclet" classname="xdoclet.modules.doc.DocumentDocletTask" classpathref="classpath"/> 
    	<taskdef name="webdoclet" classname="xdoclet.modules.web.WebDocletTask" classpathref="classpath"/>
        <taskdef name="ejbdoclet" classname="xdoclet.modules.ejb.EjbDocletTask" classpathref="classpath" />
        <taskdef name="mockdoclet" classname="xdoclet.modules.mockobjects.MockObjectDocletTask" classpathref="classpath" /> -->
   </target>
   
   <target name="clean" description="remove the previously compiled class files" depends="init">
      <delete includeEmptyDirs="yes" failonerror="no">
         <fileset dir="${build.dir}" includes="**/*.class,**/*.xml"/>
         <fileset dir="${build.dir}" includes="**/*.xml"/>
         <fileset dir="${reports}" includes="**/*html,**/*htm,**/*xml"/>
         <fileset dir="${jars}" includes="**/*"/>
      </delete>
   </target>
   <target name="setup" depends="init">
      <mkdir dir="${build.dir}"/>
      <mkdir dir="logs"/>
      <mkdir dir="${reports}/todos"/>
      <mkdir dir="${reports}/javadoc"/>
      <mkdir dir="${reports}/junit"/>
   </target>
   <!--
    <target name="xdoclet" depends="setup">
        <echo>XDoclet on GSN Web Interface</echo>
        <webdoclet destdir="${webapp.dir}/WEB-INF/">
            <fileset dir="${src.dir}">
                <include name="**/gsn/web/*.java"/>
            </fileset>
            <deploymentdescriptor mergeDir="${basedir}/merges">
                <welcomefile file="introduction.do"/>
            </deploymentdescriptor>
        </webdoclet>
    </target>
-->

    <target name="build" depends="setup">
      <copydir  dest="${build.dir}/org" src="${src.dir}/org"/>
    	<javac debug="true" srcdir="${src.dir}" optimize="off"
               destdir="${build.dir}" failonerror="true" source="1.5" classpathref="classpath"/>
      <echo>Compiling JIBX Mappings...</echo>
      <java classname="org.jibx.binding.Compile" fork="yes" dir="${basedir}"
            failonerror="true">
         <classpath refid="classpath"/>
         <arg value="conf/containerJIBX.xml"/>
         <arg value="conf/VirtualSensorDescription.xml"/>            
      </java>
   </target>
   
   <target name="dir" depends="build">
      <!--  <webdoclet destdir="${dswebapp.dir}/WEB-INF/" description="This task for Directory Service">
            <fileset dir="${src.dir}">
                <include name="**/registry/**"/>
            </fileset>
            <deploymentdescriptor mergeDir="${basedir}/merges">
                <welcomefile file="/sensors.jsp"/>
            </deploymentdescriptor>
        </webdoclet> -->
      <java classname="gsn.registry.Registry" fork="true" dir="${basedir}">
         <classpath refid="classpath"/>
         <arg value="1882"/>
         <arg value="127.0.0.1"/>
         <!--   <arg value="/tmp/bla" />-->
         <jvmarg value="-Dorg.apache.commons.logging.Log=org.apache.commons.logging.impl.Log4JLogger"/>
         <jvmarg value="-Dorg.mortbay.log.LogFactory.noDiscovery=false"/>
         <!--<jvmarg value="-server"/>-->
      </java>
   </target>
   
   
   <target name="runcam" depends="build">
      <java classpathref="classpath" classname="gsn.Main" maxmemory="${maxMemoryUsage}" fork="true"
            dir="${build.dir}">
         <env key="LD_LIBRARY_PATH"
              value="${jmf.dir}/lib:${env.JAVA_HOME}/jre/lib/i386:${env.JAVA_HOME}/jre/lib/i386/client:${env.JAVA_HOME}/jre/lib/i386/xawt"/>
         <env key="LD_PRELOAD" value="${env.JAVA_HOME}/jre/lib/i386/libjawt.so"/>
      </java>
   </target>
   
   <target name="gsn" depends="build">
      <java classname="gsn.Main" maxmemory="${maxMemoryUsage}" fork="true" dir="${basedir}">
         <classpath refid="classpath"/>
         <jvmarg value="-Dorg.apache.commons.logging.Log=org.apache.commons.logging.impl.Log4JLogger"/>
         <jvmarg value="-Dorg.mortbay.log.LogFactory.noDiscovery=false"/>
         <!-- <jvmarg value="-server"/> Sometimes on windows compaines about a missing dll.-->
         <!-- For profiling using JConsole <jvmarg value="-Dcom.sun.management.jmxremote"/> -->
         <!-- For JDK5 profiling <jvmarg value="-Xrunhprof:heap=sites,depth=15,force=n"/> -->
      </java>
   </target>

   <target name="securityTest" depends="build">
      <java classpathref="classpath" classname="gsn.tests.SecurtiyTest" maxmemory="${maxMemoryUsage}" fork="true"
            dir="${build.dir}">
         
      </java>
   </target>  
   
   <target name="rfidtest" depends="build">
      <java classname="gsn.wrappers.RFIDSample" maxmemory="${maxMemoryUsage}" fork="true" dir="${build.dir}">
         <classpath refid="classpath"/>
      </java>
   </target>
   
   <target name="runSim" depends="build">
      <java classpathref="classpath" classname="gsn.simulation.Simulation" maxmemory="${maxMemoryUsage}" fork="true"
            dir="${build.dir}">
         <arg value="${config}"/>
         <arg value="${conf.dir}/log4j.properties"/>
         <arg value="500"/>  <!-- Thread Counter -->           
         <arg value="38000"/> <!-- The port for starting from -->
      </java>
   </target>
   
   <target name="jcoverage-build" depends="setup,build">
      <instrument todir="${build.dir}/jcoverage-classes">
         <fileset dir="${build.dir}">
            <include name="**/*.class"/>
         </fileset>
      </instrument>
   </target>
   
   <target name="test-report" depends="jcoverage-build"
           description="Runs JUnit tests, generates jcoverage,junit,todo reports">
      
      <junit printsummary="true" fork="false" haltonerror="false"
             errorproperty="errorOccuredInTests" haltonfailure="false">
         <formatter type="xml" usefile="true"/>
         <classpath refid="classpath"/>
         <batchtest todir="${reports}/junit">
            <fileset dir="${build.dir}/jcoverage-classes/" includes="**/*Test.class"/>
         </batchtest>
      </junit>
      
      <report srcdir="${src.dir}" destdir="${reports}/jcoverage"/>
      <junitreport todir="${reports}/junit">
         <fileset dir="${reports}/junit">
            <include name="TEST-*.xml"/>
         </fileset>
         <report format="frames" todir="${reports}/junit"/>
      </junitreport>
   </target>
   
   <target name="test" depends="build" description="Runs JUnit tests">
      <junit printsummary="true" fork="false" haltonerror="false"
             errorproperty="errorOccuredInTests" haltonfailure="false"
             failureproperty="tests.failed" showoutput="true">
         <classpath refid="classpath"/>
         
         <batchtest todir="${reports}/junit">
            <fileset dir="${build.dir}" includes="**/*Test*.class"/>
         </batchtest>
      </junit>
      
      <fail if="tests.failed">
         
         ***********************************
         One or more test failed !
         ***********************************
         
      </fail>
   </target>
   
   
   <target name="docs" depends="setup">
      <javadoc classpathref="classpath"
               destdir="${reports}/javadoc"
               author="false"
               version="true"
               use="true"
               windowtitle="Global Sensor Networks Infrastructure">
         
         <fileset dir="${src.dir}" defaultexcludes="yes">
            <include name="**/*.java"/>
            <exclude name="**/*Test.java"/>
         </fileset>
         
         <doctitle>Global Sensor Networks</doctitle>
         <bottom>ali DOT salehi AT epfl DOT ch</bottom>
         <tag name="todo" scope="all" description="To do:"/>
      </javadoc>
      <documentdoclet destdir="${reports}/todos">
         <fileset dir="${src.dir}">
            <include name="**/*.java"/>
         </fileset>
         <info/>
      </documentdoclet>
      
   </target>
   <target name="jar" depends="clean,build">
      <mkdir dir="${jars}"/>
      <jar destfile="${jars}/${jar.file}" basedir="${build.dir}" >
         <manifest>
            <attribute name="Built-By" value="ALI.SALEHI-at-EPFL.ch"/>
            <attribute name="Main-Class" value="gsn.Main"/>
         </manifest>
      </jar>
   </target>
   <target name="installer" depends="clean,build,jar">
      <izpack input="${basedir}/installer/izpack-installer.xml"
              output="${basedir}/${jars}/gsn-installer.jar"
              basedir="${basedir}/installer"
              izPackdir="${basedir}/izpack"/>
   </target>
   
   <target name="pref" depends="build">
      <java classpathref="classpath" classname="gsn.tests.CreationTest" maxmemory="64m" fork="true"
            dir="${build.dir}">
      </java>
   </target>
   
   <target name="gui" depends="build">
      <java classname="gsn.gui.GSNConfiguratorFrame"  fork="true" dir="${basedir}">
         <classpath refid="classpath"/>
      </java>
   </target>
   
</project>

