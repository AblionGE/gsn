#!/usr/bin/ruby1.8
require 'rubygems'
require 'tenjin'

# This script generates the SensorScope virtual sensor description file for one node. The output is available in the 'sensorscope_wannengrat_n<NODE_ID>.xml' file
#
# Usage: ruby sensorscope-wannengrat-vs-generator.rb <SOURCE> <NODE_ID> <LATITUDE> <LONGITUDE> <MESSAGE>
# eg.  : ruby sensorscope-wannengrat-vs-generator.rb sf@sensorscop1.epfl.ch:2226 3 46.80319 9.78047 gsn.wrappers.tinyos2x.sensorscope.PayLoadMsg
#
# <SOURCE>            : The TinyOS message source
# <NODE_ID>           : The sensor ID related to the virtual sensor 
# <LATITUDE>          : The sensor latitude (-1 if not defined)
# <LONGITUDE>         : The sensor longitude (-1 if not defined)
# <LINE_NAMES>        : The line in the format file that contains the field names
# <MESSAGE>           : The full path to the java class that wraps the sensorScope messages (generated by MIG)


# Get the script parameters

SOURCE = ARGV[0]
NODE_ID = ARGV[1]
LATITUDE = ARGV[2]
LONGITUDE = ARGV[3]
MESSAGE = ARGV[4]

# Generate the output XML file

engine = Tenjin::Engine.new()
context = {
	:source    => SOURCE,
	:nodeid    => NODE_ID,
	:latitude  => LATITUDE,
	:longitude => LONGITUDE,
	:message   => MESSAGE
}
output = engine.render('sensorscope-wannengrat-template.rbxml', context)
print output
File.open("sensorscope_wannengrat_n" + NODE_ID + ".xml",'w+'){|f| f<<output }
