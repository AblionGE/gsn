<virtual-sensor name="ETZ_Dozer_StateCounter__conv" priority="10" >
    <processing-class>
        <class-name>gsn.vsensor.BridgeVirtualSensorPermasense</class-name>
        <unique-timestamps>false</unique-timestamps>
        <output-structure>
            <field name="POSITION" type="INTEGER" />
            <field name="DEVICE_ID" type="INTEGER" />
            <field name="GENERATION_TIME" type="BIGINT" unit="unixtime" index="true"/>
            <field name="TIMESTAMP" type="BIGINT" unit="unixtime"/>
            <field name="HEADER_SEQNR" type="INTEGER" />
            <field name="HEADER_ORIGINATORID" type="INTEGER" />
            <field name="HEADER_ATIME" type="INTEGER" unit="s"/>
            <field name="PERIOD" type="VARCHAR(30)" unit="s"/>
            <field name="MCUACTIVE" type="VARCHAR(30)" unit="ms" />
            <field name="RADIOTX" type="VARCHAR(30)" unit="ms" />
            <field name="RADIORX" type="VARCHAR(30)" unit="ms" />
            <field name="PAYLOAD_TRANSMISSIONFAILURES" type="INTEGER" />
            <field name="DATA_IMPORT_SOURCE" type="SMALLINT" />
        </output-structure>
    </processing-class>
    <description>Dozer messages (DozerStateCounterMsg) from ETZ deployment converted</description>
    <life-cycle pool-size="10" />
    <addressing />
    <storage />
    <streams>
        <stream name="data">
            <source alias="source" storage-size="1" sampling-rate="1">
                <address wrapper="local">
                    <predicate key="query"> select * from ETZ_Dozer_StateCounter__mapped</predicate>
                    <predicate key="start-time">continue</predicate>
                </address>
                <query> select timed, POSITION, DEVICE_ID, GENERATION_TIME, TIMESTAMP, HEADER_SEQNR, HEADER_ORIGINATORID, HEADER_ATIME, 
                cast(round(PAYLOAD_PERIOD / 32768.0, 3) as CHAR(30)) as PERIOD,
                cast(round(PAYLOAD_MCUACTIVE * 1000.0 / 32768.0, 1) as CHAR(30)) as MCUACTIVE,
                cast(round(PAYLOAD_RADIOTX * 1000.0 / 32768.0, 1) as CHAR(30)) as RADIOTX,
                cast(round(PAYLOAD_RADIORX * 1000.0 / 32768.0, 1) as CHAR(30)) as RADIORX, 
                PAYLOAD_TRANSMISSIONFAILURES, DATA_IMPORT_SOURCE 
                from wrapper </query>
            </source>
            <query> select * from source </query>
        </stream>
    </streams>
</virtual-sensor>
