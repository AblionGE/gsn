<virtual-sensor name="Thur_OutlierNoiseFilter_Pos3__Ch0" priority="10" >
    <processing-class>
        <class-name>gsn.vsensor.OutlierNoiseFilterVirtualSensor</class-name>
        <init-params>
            <param name="outlier_filter">one_sided_median_menold</param>
            <param name="outlier_filter_threshold">8</param>
            <param name="outlier_filter_min_nb_of_values_in_window">5</param>
            <param name="outlier_filter_window_width_in_minutes">60</param>

            <param name="noise_filter">mean</param>
            <param name="noise_filter_window_width_in_minutes">20</param>

            <param name="buffer_size">100</param>
        </init-params>
       	<output-structure>
            <field name="DEVICE_ID" type="INTEGER" />
            <field name="POSITION" type="INTEGER" />
			<field name="GENERATION_TIME" type="BIGINT" unit="unixtime" index="true"/>
			<field name="TIMESTAMP" type="BIGINT" unit="unixtime"/>
			<field name="RAW_VALUE_OUT" type="DOUBLE" />
            <field name="OUTLIER_FILTER_MEDIAN" type="DOUBLE" />
            <field name="OUTLIER_FILTER_LOWER_BOUND" type="DOUBLE" />
            <field name="OUTLIER_FILTER_UPPER_BOUND" type="DOUBLE" />
			<field name="OUTLIER_FILTER_CLASSIFICATION" type="INTEGER" />
            <field name="OUTLIER_FILTER_VALUE" type="DOUBLE" />
            <field name="NOISE_FILTER_VALUE" type="DOUBLE" />
       	</output-structure>
    </processing-class>
    <description>outlier/noise filter for conductivity channel 0 at position 3 at Thur deployment</description>
    <life-cycle pool-size="10" />
    <addressing />
    <storage />
    <streams>
        <stream name="pos3_ch0">
            <source alias="source" storage-size="1" sampling-rate="1">
                <address wrapper="remote-rest">
                    <predicate key="query"> select * from thur_dozer_decagonmux__conv where position = 3</predicate>
                    <predicate key="remote-contact-point">http://data.permasense.ch/streaming/</predicate>
                </address>
                <query> select device_id, position, timestamp, generation_time, conductivity0 as raw_value_in from wrapper </query>
            </source>
            <query>select * from source</query>
        </stream>
    </streams>
</virtual-sensor>