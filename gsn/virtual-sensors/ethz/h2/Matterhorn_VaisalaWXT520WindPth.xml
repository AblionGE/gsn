<virtual-sensor name="Matterhorn_VaisalaWXT520WindPth" priority="10" >
    <processing-class>
        <class-name>gsn.vsensor.BridgeVirtualSensorPermasense</class-name>
        <unique-timestamps>false</unique-timestamps>
        <output-structure>
            <field name="POSITION" type="INTEGER" />
            <field name="DEVICE_ID" type="INTEGER" />
            <field name="GENERATION_TIME" type="BIGINT" unit="unixtime" index="true"/>
            <field name="TIMESTAMP" type="BIGINT" unit="unixtime"/>
            <field name="WIND_DIRECTION_MINIMUM" type="VARCHAR(30)" unit="°"/>
            <field name="WIND_DIRECTION_AVERAGE" type="VARCHAR(30)" unit="°"/>
            <field name="WIND_DIRECTION_MAXIMUM" type="VARCHAR(30)" unit="°"/>
            <field name="WIND_SPEED_MINIMUM" type="VARCHAR(30)" unit="km/h"/>
            <field name="WIND_SPEED_AVERAGE" type="VARCHAR(30)" unit="km/h"/>
            <field name="WIND_SPEED_MAXIMUM" type="VARCHAR(30)" unit="km/h"/>
            <field name="AIR_TEMPERATURE" type="VARCHAR(30)" unit="°C"/>
            <field name="INTERNAL_TEMPERATURE" type="VARCHAR(30)" unit="°C"/>
            <field name="RELATIVE_HUMIDITY" type="VARCHAR(30)" unit="%RH"/>
            <field name="AIR_PRESSURE" type="VARCHAR(30)" unit="hPa"/>
        </output-structure>
    </processing-class>
    <description>show weather sensor values of Vaisala WXT520 at the Matterhorn deployment</description>
    <life-cycle pool-size="10" />
    <addressing />
    <storage />
    <streams>
        <stream name="data0">
            <source alias="source" storage-size="1" sampling-rate="1">
                <address wrapper="local">
                    <predicate key="query"> select * from Matterhorn_Dozer_WXT520WindPth__mapped</predicate>
                    <predicate key="start-time">continue</predicate>
                </address>
                <query> select timed, POSITION, DEVICE_ID, GENERATION_TIME, TIMESTAMP,
                casewhen(PAYLOAD_SAMPLE_VALID=1,cast(PAYLOAD_WU_DN as CHAR(30)),NULL) as WIND_DIRECTION_MINIMUM,
                casewhen(PAYLOAD_SAMPLE_VALID=1,cast(PAYLOAD_WU_DM as CHAR(30)),NULL) as WIND_DIRECTION_AVERAGE,
                casewhen(PAYLOAD_SAMPLE_VALID=1,cast(PAYLOAD_WU_DX as CHAR(30)),NULL) as WIND_DIRECTION_MAXIMUM,
                casewhen(PAYLOAD_SAMPLE_VALID=1,cast(round(PAYLOAD_WU_SN / 10.0, 2) as CHAR(30)),NULL) as WIND_SPEED_MINIMUM,
                casewhen(PAYLOAD_SAMPLE_VALID=1,cast(round(PAYLOAD_WU_SM / 10.0, 2) as CHAR(30)),NULL) as WIND_SPEED_AVERAGE,
                casewhen(PAYLOAD_SAMPLE_VALID=1,cast(round(PAYLOAD_WU_SX / 10.0, 2) as CHAR(30)),NULL) as WIND_SPEED_MAXIMUM,
                casewhen(PAYLOAD_SAMPLE_VALID=1,cast(round(PAYLOAD_TU_TA / 10.0, 2) as CHAR(30)),NULL) as AIR_TEMPERATURE,
                casewhen(PAYLOAD_SAMPLE_VALID=1,cast(round(PAYLOAD_TU_TP / 10.0, 2) as CHAR(30)),NULL) as INTERNAL_TEMPERATURE,
                casewhen(PAYLOAD_SAMPLE_VALID=1,cast(round(PAYLOAD_TU_UA / 10.0, 2) as CHAR(30)),NULL) as RELATIVE_HUMIDITY,
                casewhen(PAYLOAD_SAMPLE_VALID=1,cast(round(PAYLOAD_TU_PA / 10.0, 2) as CHAR(30)),NULL) as AIR_PRESSURE
                from wrapper </query>
            </source>
            <query> select * from source </query>
        </stream>
        <stream name="data1">
            <source alias="source" storage-size="1" sampling-rate="1">
                <address wrapper="local">
                    <predicate key="query">select * from Matterhorn_VaisalaWXT520__mapped</predicate>
                    <predicate key="start-time">continue</predicate>
                </address>
                <query> select
                  timed, POSITION, DEVICE_ID, GENERATION_TIME, TIMESTAMP,
                  WIND_DIRECTION_MINIMUM,WIND_DIRECTION_AVERAGE,WIND_DIRECTION_MAXIMUM,WIND_SPEED_MINIMUM,WIND_SPEED_AVERAGE,WIND_SPEED_MAXIMUM,AIR_TEMPERATURE,INTERNAL_TEMPERATURE,RELATIVE_HUMIDITY,AIR_PRESSURE
                  from wrapper </query>
            </source>
            <query> select * from source </query>
        </stream>
        
    </streams>
</virtual-sensor>
