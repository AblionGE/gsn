<virtual-sensor name="Matterhorn_CoreStationStatus_Hardware__mapped" priority="10" >
    <processing-class>
        <class-name>gsn.vsensor.BridgeVirtualSensorPermasense</class-name>
        <unique-timestamps>false</unique-timestamps>
        <init-params>
            <param name="position_mapping" />
            <param name="persistant">true</param>
            <param name="scriptlet">
                <![CDATA[
                    if ( ! isdef('positionMap')) { positionMap = [:]; }
                    if (POSITION != null && GENERATION_TIME > System.currentTimeMillis()-2592000000) { positionMap.put(POSITION, System.currentTimeMillis()); }
                ]]>
            </param>
            <param name="period">150000</param>
            <param name="scriplet-periodic">
                <![CDATA[
                	// default alarm time after which an email is sent if no messages have been received
                    def timeDifferenceOffsetDefault = 86400000;
                	// a list of alarm time per position
                    def timeDifferenceOffsetPositionMap = [:];
                    // the mail recipients
                    def mailrecipients = ["gsn-notification@tik.ee.ethz.ch"];
                    
                    if ( isdef('positionMap')) {
                    	def rmlist = [];
                    	for (entry in positionMap) {
                        	def timeDifference = System.currentTimeMillis() - entry.value;
                        	def timeDifferenceOffset = timeDifferenceOffsetDefault;
                        	if (timeDifferenceOffsetPositionMap.containsKey(entry.key)) {
                        		timeDifferenceOffset = timeDifferenceOffsetPositionMap.get(entry.key);
                        	}
                        	if (timeDifference > timeDifferenceOffset) {
                        		// Notify by email
                        		def emailTitle = "[PermaSense-GSN-Public] - WARNING: No more " + vsname + " messages received from position " + entry.key;
                        		def emailContent = "WARNING: No " + vsname + " messages received in the last " + (timeDifference/60000.0) + " minutes from device with position " + entry.key + ".";

								org.apache.log4j.Logger.getLogger(gsn.processor.ScriptletProcessor.class).warn(emailContent);
                        		sendEmail(mailrecipients, emailTitle, emailContent);
                        		rmlist.add(entry.key)
                        	}
                        }
                        positionMap.keySet().removeAll( rmlist as Set );
                    }
                ]]>
            </param>
        </init-params>
        <output-structure>
            <field name="POSITION" type="INTEGER" index="true" />
            <field name="DEVICE_ID" type="INTEGER" />
            <field name="GENERATION_TIME" type="BIGINT" unit="unixtime" index="true"/>
            <field name="TIMESTAMP" type="BIGINT" unit="unixtime" />
            
			<field name="USB1_ON" type="TINYINT" />
			<field name="USB2_ON" type="TINYINT" />
			<field name="USB3_ON" type="TINYINT" />
			<field name="EXT1_ON" type="TINYINT" />
			<field name="EXT2_ON" type="TINYINT" />
			<field name="EXT3_ON" type="TINYINT" />
            <field name="V_EXT1" type="INTEGER" unit="mV"/>
            <field name="V_EXT2" type="INTEGER" unit="mV"/>
            <field name="V_EXT3" type="INTEGER" unit="mV"/>
            <field name="I_V12DC_EXT" type="INTEGER" unit="µA"/>
            <field name="V12DC_IN" type="INTEGER" unit="mV"/>
            <field name="I_V12DC_IN" type="INTEGER" unit="µA"/>
            <field name="VCC_5_0" type="INTEGER" unit="mV"/>
            <field name="VCC_NODE" type="INTEGER" unit="mV"/>
            <field name="I_VCC_NODE" type="INTEGER" unit="µA"/>
            <field name="VCC_4_2" type="INTEGER" unit="mV"/>
            <field name="LM92_TEMP" type="INTEGER" unit="m°C" />
			<field name="BAT_STATE" type="SMALLINT" />
			<field name="BAT_SOC" type="DOUBLE" unit="%" />
			<field name="BAT_REM_TIME" type="BIGINT" unit="min" />
			<field name="BAT_REM_TIME_DIFF" type="BIGINT" unit="min" />
			<field name="V_BAT" type="INTEGER" unit="mV" />
			<field name="I_V12DC_TOT" type="INTEGER" unit="mA" />
        </output-structure>
    </processing-class>
    <description>CoreStation hardware status from Matterhorn deployment</description>
    <life-cycle pool-size="10" />
    <addressing />
    <storage />
    <streams>
        <stream name="data">
            <source alias="source" storage-size="1" sampling-rate="1">
                <address wrapper="remote-rest">
                    <predicate key="query">select * from Matterhorn_CoreStationStatus_Hardware</predicate>
                    <predicate key="remote-contact-point">http://whymper.ethz.ch:22080/streaming/</predicate>
                    <predicate key="start-time">continue</predicate>
                </address>
                <query> select * from wrapper </query>
            </source>
            <query> select * from source </query>
        </stream>
    </streams>
</virtual-sensor>
