
package gsn.msr.sensormap.appman;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAXWS SI.
 * JAX-WS RI 2.0_02-b08-fcs
 * Generated source version: 2.0
 * 
 */
@WebService(name = "ServiceSoap", targetNamespace = "http://nec.research.microsoft.com/")
public interface ServiceSoap {


    /**
     * Helps check if web service is available.
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Test", action = "http://nec.research.microsoft.com/Test")
    @WebResult(name = "TestResult", targetNamespace = "http://nec.research.microsoft.com/")
    @RequestWrapper(localName = "Test", targetNamespace = "http://nec.research.microsoft.com/", className = "gsn.msr.sensormap.appman.Test")
    @ResponseWrapper(localName = "TestResponse", targetNamespace = "http://nec.research.microsoft.com/", className = "gsn.msr.sensormap.appman.TestResponse")
    public String test();

    /**
     * Helps check if web service is available with your credentials.
     * 
     * @param userID
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "TestAuthenticated", action = "http://nec.research.microsoft.com/TestAuthenticated")
    @WebResult(name = "TestAuthenticatedResult", targetNamespace = "http://nec.research.microsoft.com/")
    @RequestWrapper(localName = "TestAuthenticated", targetNamespace = "http://nec.research.microsoft.com/", className = "gsn.msr.sensormap.appman.TestAuthenticated")
    @ResponseWrapper(localName = "TestAuthenticatedResponse", targetNamespace = "http://nec.research.microsoft.com/", className = "gsn.msr.sensormap.appman.TestAuthenticatedResponse")
    public String testAuthenticated(
        @WebParam(name = "userID", targetNamespace = "http://nec.research.microsoft.com/")
        String userID,
        @WebParam(name = "token", targetNamespace = "http://nec.research.microsoft.com/")
        String token);

    /**
     * Check whether APIs of this web service are working
     * 
     * @return
     *     returns gsn.msr.sensormap.appman.ArrayOfString
     */
    @WebMethod(operationName = "Debug", action = "http://nec.research.microsoft.com/Debug")
    @WebResult(name = "DebugResult", targetNamespace = "http://nec.research.microsoft.com/")
    @RequestWrapper(localName = "Debug", targetNamespace = "http://nec.research.microsoft.com/", className = "gsn.msr.sensormap.appman.Debug")
    @ResponseWrapper(localName = "DebugResponse", targetNamespace = "http://nec.research.microsoft.com/", className = "gsn.msr.sensormap.appman.DebugResponse")
    public ArrayOfString debug();

    /**
     * Returns unique IDs and associated metadata for sensors available within requested polygonal region.
     * 
     * @param polygon
     * @param userID
     * @param searchTerms
     * @param token
     * @param sensorTypes
     * @return
     *     returns gsn.msr.sensormap.appman.ResponseOfArrayOfSensorInfo
     */
    @WebMethod(operationName = "FindSensorsByLocation", action = "http://nec.research.microsoft.com/FindSensorsByLocation")
    @WebResult(name = "FindSensorsByLocationResult", targetNamespace = "http://nec.research.microsoft.com/")
    @RequestWrapper(localName = "FindSensorsByLocation", targetNamespace = "http://nec.research.microsoft.com/", className = "gsn.msr.sensormap.appman.FindSensorsByLocation")
    @ResponseWrapper(localName = "FindSensorsByLocationResponse", targetNamespace = "http://nec.research.microsoft.com/", className = "gsn.msr.sensormap.appman.FindSensorsByLocationResponse")
    public ResponseOfArrayOfSensorInfo findSensorsByLocation(
        @WebParam(name = "userID", targetNamespace = "http://nec.research.microsoft.com/")
        String userID,
        @WebParam(name = "token", targetNamespace = "http://nec.research.microsoft.com/")
        String token,
        @WebParam(name = "polygon", targetNamespace = "http://nec.research.microsoft.com/")
        ArrayOfPointF polygon,
        @WebParam(name = "searchTerms", targetNamespace = "http://nec.research.microsoft.com/")
        String searchTerms,
        @WebParam(name = "sensorTypes", targetNamespace = "http://nec.research.microsoft.com/")
        ArrayOfSensorTypeEnum sensorTypes);

    /**
     * Obtain latest snapshot data from scalar sensors. Only sensors hosted by MSR datahub are accessed.
     * 
     * @param userID
     * @param publisherNames
     * @param token
     * @param sensorNames
     * @return
     *     returns gsn.msr.sensormap.appman.ResponseOfArrayOfSensorData
     */
    @WebMethod(operationName = "CollectDataSnapshotScalar", action = "http://nec.research.microsoft.com/CollectDataSnapshotScalar")
    @WebResult(name = "CollectDataSnapshotScalarResult", targetNamespace = "http://nec.research.microsoft.com/")
    @RequestWrapper(localName = "CollectDataSnapshotScalar", targetNamespace = "http://nec.research.microsoft.com/", className = "gsn.msr.sensormap.appman.CollectDataSnapshotScalar")
    @ResponseWrapper(localName = "CollectDataSnapshotScalarResponse", targetNamespace = "http://nec.research.microsoft.com/", className = "gsn.msr.sensormap.appman.CollectDataSnapshotScalarResponse")
    public ResponseOfArrayOfSensorData collectDataSnapshotScalar(
        @WebParam(name = "userID", targetNamespace = "http://nec.research.microsoft.com/")
        String userID,
        @WebParam(name = "token", targetNamespace = "http://nec.research.microsoft.com/")
        String token,
        @WebParam(name = "publisherNames", targetNamespace = "http://nec.research.microsoft.com/")
        ArrayOfString publisherNames,
        @WebParam(name = "sensorNames", targetNamespace = "http://nec.research.microsoft.com/")
        ArrayOfString sensorNames);

    /**
     * Obtain latest snapshot data from scalar sensors, hosted by one specified gateway.
     * 
     * @param userID
     * @param publisherNames
     * @param token
     * @param sensorNames
     * @param gatewayURL
     * @return
     *     returns gsn.msr.sensormap.appman.ResponseOfArrayOfSensorData
     */
    @WebMethod(operationName = "CollectDataSnapshotScalarGW", action = "http://nec.research.microsoft.com/CollectDataSnapshotScalarGW")
    @WebResult(name = "CollectDataSnapshotScalarGWResult", targetNamespace = "http://nec.research.microsoft.com/")
    @RequestWrapper(localName = "CollectDataSnapshotScalarGW", targetNamespace = "http://nec.research.microsoft.com/", className = "gsn.msr.sensormap.appman.CollectDataSnapshotScalarGW")
    @ResponseWrapper(localName = "CollectDataSnapshotScalarGWResponse", targetNamespace = "http://nec.research.microsoft.com/", className = "gsn.msr.sensormap.appman.CollectDataSnapshotScalarGWResponse")
    public ResponseOfArrayOfSensorData collectDataSnapshotScalarGW(
        @WebParam(name = "userID", targetNamespace = "http://nec.research.microsoft.com/")
        String userID,
        @WebParam(name = "token", targetNamespace = "http://nec.research.microsoft.com/")
        String token,
        @WebParam(name = "publisherNames", targetNamespace = "http://nec.research.microsoft.com/")
        ArrayOfString publisherNames,
        @WebParam(name = "sensorNames", targetNamespace = "http://nec.research.microsoft.com/")
        ArrayOfString sensorNames,
        @WebParam(name = "gatewayURL", targetNamespace = "http://nec.research.microsoft.com/")
        String gatewayURL);

    /**
     * Make your transformer known to senseweb
     * 
     * @param txID
     * @param txGeoRSSUrl
     * @param userID
     * @param txWsdlUrl
     * @param token
     * @param description
     * @param txGuiUrl
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "RegsiterTransformer", action = "http://nec.research.microsoft.com/RegsiterTransformer")
    @WebResult(name = "RegsiterTransformerResult", targetNamespace = "http://nec.research.microsoft.com/")
    @RequestWrapper(localName = "RegsiterTransformer", targetNamespace = "http://nec.research.microsoft.com/", className = "gsn.msr.sensormap.appman.RegsiterTransformer")
    @ResponseWrapper(localName = "RegsiterTransformerResponse", targetNamespace = "http://nec.research.microsoft.com/", className = "gsn.msr.sensormap.appman.RegsiterTransformerResponse")
    public String regsiterTransformer(
        @WebParam(name = "userID", targetNamespace = "http://nec.research.microsoft.com/")
        String userID,
        @WebParam(name = "token", targetNamespace = "http://nec.research.microsoft.com/")
        String token,
        @WebParam(name = "TxID", targetNamespace = "http://nec.research.microsoft.com/")
        String txID,
        @WebParam(name = "TxGeoRSSUrl", targetNamespace = "http://nec.research.microsoft.com/")
        String txGeoRSSUrl,
        @WebParam(name = "TxWsdlUrl", targetNamespace = "http://nec.research.microsoft.com/")
        String txWsdlUrl,
        @WebParam(name = "TxGuiUrl", targetNamespace = "http://nec.research.microsoft.com/")
        String txGuiUrl,
        @WebParam(name = "description", targetNamespace = "http://nec.research.microsoft.com/")
        String description);

}
