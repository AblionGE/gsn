/* soapGSNWebServiceSoap11BindingProxy.h
   Generated by gSOAP 2.7.16 from gsnwebservice.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapGSNWebServiceSoap11BindingProxy_H
#define soapGSNWebServiceSoap11BindingProxy_H
#include "soapH.h"
class GSNWebServiceSoap11Binding
{   public:
	/// Runtime engine context allocated in constructor
	struct soap *soap;
	/// Endpoint URL of service 'GSNWebServiceSoap11Binding' (change as needed)
	const char *endpoint;
	/// Constructor allocates soap engine context, sets default endpoint URL, and sets namespace mapping table
	GSNWebServiceSoap11Binding()
	{ soap = soap_new(); endpoint = "http://localhost:22001/services/GSNWebService/"; if (soap && !soap->namespaces) { static const struct Namespace namespaces[] = 
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://www.w3.org/2003/05/soap-envelope", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://www.w3.org/2003/05/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns3", "http://datarequest.http.gsn/xsd", NULL, NULL},
	{"ns2", "http://standard.webservice.gsn/xsd", NULL, NULL},
	{"ns4", "http://standard.webservice.gsn/GSNWebServiceSoap12Binding", NULL, NULL},
	{"ns1", "http://standard.webservice.gsn", NULL, NULL},
	{"ns5", "http://standard.webservice.gsn/GSNWebServiceSoap11Binding", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap->namespaces = namespaces; } };
	/// Destructor frees deserialized data and soap engine context
	virtual ~GSNWebServiceSoap11Binding() { if (soap) { soap_destroy(soap); soap_end(soap); soap_free(soap); } };
	/// Invoke 'getContainerInfo' of service 'GSNWebServiceSoap11Binding' and return error code (or SOAP_OK)
	virtual int __ns5__getContainerInfo(_ns1__getContainerInfo *ns1__getContainerInfo, _ns1__getContainerInfoResponse *ns1__getContainerInfoResponse) { return soap ? soap_call___ns5__getContainerInfo(soap, endpoint, NULL, ns1__getContainerInfo, ns1__getContainerInfoResponse) : SOAP_EOM; };
	/// Invoke 'getMultiData' of service 'GSNWebServiceSoap11Binding' and return error code (or SOAP_OK)
	virtual int __ns5__getMultiData(_ns1__getMultiData *ns1__getMultiData, _ns1__getMultiDataResponse *ns1__getMultiDataResponse) { return soap ? soap_call___ns5__getMultiData(soap, endpoint, NULL, ns1__getMultiData, ns1__getMultiDataResponse) : SOAP_EOM; };
	/// Invoke 'listVirtualSensorNames' of service 'GSNWebServiceSoap11Binding' and return error code (or SOAP_OK)
	virtual int __ns5__listVirtualSensorNames(_ns1__listVirtualSensorNames *ns1__listVirtualSensorNames, _ns1__listVirtualSensorNamesResponse *ns1__listVirtualSensorNamesResponse) { return soap ? soap_call___ns5__listVirtualSensorNames(soap, endpoint, NULL, ns1__listVirtualSensorNames, ns1__listVirtualSensorNamesResponse) : SOAP_EOM; };
	/// Invoke 'getNextData' of service 'GSNWebServiceSoap11Binding' and return error code (or SOAP_OK)
	virtual int __ns5__getNextData(_ns1__getNextData *ns1__getNextData, _ns1__getNextDataResponse *ns1__getNextDataResponse) { return soap ? soap_call___ns5__getNextData(soap, endpoint, NULL, ns1__getNextData, ns1__getNextDataResponse) : SOAP_EOM; };
	/// Invoke 'registerQuery' of service 'GSNWebServiceSoap11Binding' and return error code (or SOAP_OK)
	virtual int __ns5__registerQuery(_ns1__registerQuery *ns1__registerQuery, _ns1__registerQueryResponse *ns1__registerQueryResponse) { return soap ? soap_call___ns5__registerQuery(soap, endpoint, NULL, ns1__registerQuery, ns1__registerQueryResponse) : SOAP_EOM; };
	/// Invoke 'unregisterQuery' of service 'GSNWebServiceSoap11Binding' and return error code (or SOAP_OK)
	virtual int __ns5__unregisterQuery(_ns1__unregisterQuery *ns1__unregisterQuery, _ns1__unregisterQueryResponse *ns1__unregisterQueryResponse) { return soap ? soap_call___ns5__unregisterQuery(soap, endpoint, NULL, ns1__unregisterQuery, ns1__unregisterQueryResponse) : SOAP_EOM; };
	/// Invoke 'getLatestMultiData' of service 'GSNWebServiceSoap11Binding' and return error code (or SOAP_OK)
	virtual int __ns5__getLatestMultiData(_ns1__getLatestMultiData *ns1__getLatestMultiData, _ns1__getLatestMultiDataResponse *ns1__getLatestMultiDataResponse) { return soap ? soap_call___ns5__getLatestMultiData(soap, endpoint, NULL, ns1__getLatestMultiData, ns1__getLatestMultiDataResponse) : SOAP_EOM; };
	/// Invoke 'deleteVirtualSensor' of service 'GSNWebServiceSoap11Binding' and return error code (or SOAP_OK)
	virtual int __ns5__deleteVirtualSensor(_ns1__deleteVirtualSensor *ns1__deleteVirtualSensor, _ns1__deleteVirtualSensorResponse *ns1__deleteVirtualSensorResponse) { return soap ? soap_call___ns5__deleteVirtualSensor(soap, endpoint, NULL, ns1__deleteVirtualSensor, ns1__deleteVirtualSensorResponse) : SOAP_EOM; };
	/// Invoke 'getVirtualSensorsDetails' of service 'GSNWebServiceSoap11Binding' and return error code (or SOAP_OK)
	virtual int __ns5__getVirtualSensorsDetails(_ns1__getVirtualSensorsDetails *ns1__getVirtualSensorsDetails, _ns1__getVirtualSensorsDetailsResponse *ns1__getVirtualSensorsDetailsResponse) { return soap ? soap_call___ns5__getVirtualSensorsDetails(soap, endpoint, NULL, ns1__getVirtualSensorsDetails, ns1__getVirtualSensorsDetailsResponse) : SOAP_EOM; };
	/// Invoke 'createVirtualSensor' of service 'GSNWebServiceSoap11Binding' and return error code (or SOAP_OK)
	virtual int __ns5__createVirtualSensor(_ns1__createVirtualSensor *ns1__createVirtualSensor, _ns1__createVirtualSensorResponse *ns1__createVirtualSensorResponse) { return soap ? soap_call___ns5__createVirtualSensor(soap, endpoint, NULL, ns1__createVirtualSensor, ns1__createVirtualSensorResponse) : SOAP_EOM; };
	/// Invoke 'listWrapperURLs' of service 'GSNWebServiceSoap11Binding' and return error code (or SOAP_OK)
	virtual int __ns5__listWrapperURLs(_ns1__listWrapperURLs *ns1__listWrapperURLs, _ns1__listWrapperURLsResponse *ns1__listWrapperURLsResponse) { return soap ? soap_call___ns5__listWrapperURLs(soap, endpoint, NULL, ns1__listWrapperURLs, ns1__listWrapperURLsResponse) : SOAP_EOM; };
};
#endif
