<project name="gsn" default="build" basedir=".">
    <target name="init" description="initializes properties and initialization tasks">
        <tstamp>
            <format property="TODAY" pattern="yyyy-MMMM-d-'at'-hh-mm-aa" locale="en"/>
        </tstamp>

        <property name="conf.dir" value="${basedir}/conf"/>
        <property name="build.dir" value="build/classes"/>
        <property name="test-build.dir" value="build/test"/>
        <property name="src.dir" value="src/java"/>
        <property name="test.dir" value="src/test"/>
        <property name="jars" value="jars"/>
        <property name="libdir" value="lib"/>
        <property name="reports" value="reports"/>
        <property name="temp" value="temp"/>
        <property name="maxMemoryUsage" value="128m"/>
        <property name="jar.file" value="gsn-core2.jar"/>

        <path id="classpath">
            <pathelement location="${build.dir}/"/>
            <pathelement location="${test-build.dir}/"/>
            <pathelement location="${env.JAVA_HOME}/lib/tools.jar"/>
            <fileset dir="${libdir}">
                <include name="**/*.jar"/>
            </fileset>
            <pathelement location="${conf.dir}"/>
        </path>

        <path id="cobertura.classpath">
            <fileset dir="${libdir}/cobertura">
                <include name="*.jar"/>
            </fileset>
        </path>

        <taskdef classpathref="cobertura.classpath" resource="tasks.properties"/>
        <property name="instrumented.dir" value="build/instrumened"/>
    </target>

    <target name="clean" description="remove the previously compiled class files" depends="init">
        <delete includeEmptyDirs="yes" failonerror="no">
            <fileset dir="${build.dir}" includes="**/*.class,**/*.xml"/>
            <fileset dir="${build.dir}" includes="**/*.xml"/>
            <fileset dir="${reports}" includes="**/*html,**/*htm,**/*xml"/>
            <fileset dir="${jars}" includes="**/*"/>
        </delete>
    </target>
    
    <target name="setup" depends="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${test-build.dir}"/>
        <mkdir dir="logs"/>
        <mkdir dir="${reports}/todos"/>
        <mkdir dir="${reports}/javadoc"/>
        <mkdir dir="${reports}/junit"/>
        <condition property="java6">
            <equals arg1="${ant.java.version}" arg2="1.6"/>
        </condition>

        <!--<copy todir="${build.dir}/org/apache">-->
        <!--<fileset dir="${src.dir}/org/apache"/>-->
        <!--</copy>-->
        <!--<copy todir="${build.dir}/META-INF">-->
        <!--<fileset dir="${src.dir}/META-INF"/>-->
        <!--</copy>-->
    </target>


    <target name="build" depends="setup">
        <javac debug="true" srcdir="${src.dir}" optimize="off"
               destdir="${build.dir}" failonerror="true" classpathref="classpath">
        </javac>

        <javac debug="true" srcdir="${test.dir}" optimize="off"
               destdir="${test-build.dir}" failonerror="true" classpathref="classpath">
        </javac>
    </target>

    <target name="bind" depends="build">
        <echo>Compiling JIBX Mappings...</echo>
        <java classname="org.jibx.binding.Compile" fork="yes" dir="${basedir}"
              failonerror="true">
            <classpath refid="classpath"/>
            <arg value="conf/containerJIBX.xml"/>
            <arg value="conf/VirtualSensorDescription.xml"/>
        </java>
    </target>

    <target name="gsn" depends="bind,cleandb">
        <java classname="gsn.Main" maxmemory="${maxMemoryUsage}" fork="true" dir="${basedir}">
            <classpath refid="classpath"/>
            <jvmarg value="-Dorg.apache.commons.logging.Log=org.apache.commons.logging.impl.Log4JLogger"/>
            <jvmarg value="-Dorg.mortbay.log.LogFactory.noDiscovery=false"/>
            <jvmarg value="-server"/>
            <!--Sometimes on windows compaines about a missing dll.-->
            <!--For profiling using JConsole-->
            <!--<jvmarg value="-Dcom.sun.management.jmxremote"/>-->
            <!--For JDK5 profiling-->
            <!--<jvmarg value="-Xrunhprof:heap=sites,depth=15,force=n"/>-->
        </java>
    </target>

    <target name="init-reports" depends="build">
        <delete dir="${reports}/junit"/>
        <mkdir dir="${reports}/junit"/>
        <delete dir="${instrumented.dir}"/>
        <mkdir dir="${instrumented.dir}"/>
        <delete dir="${reports}/cobertura"/>
        <delete file="cobertura.ser"/>
        <cobertura-instrument todir="${instrumented.dir}">
            <fileset dir="${build.dir}">
                <include name="**/*.class"/>
                <exclude name="**/ContainerConfig.class"/>
                <exclude name="**/JiBX.class"/>
                <exclude name="**/Test*.class"/>
                <exclude name="**/*Test.class"/>
            </fileset>
        </cobertura-instrument>
    </target>

    <target name="test" depends="init-reports, bind" description="Runs JUnit tests">
        <junit printsummary="true" fork="true" haltonerror="false" haltonfailure="false"
               failureproperty="tests.failed" showoutput="true">

            <formatter type="xml" usefile="true"/>

            <!--Note: the classpath order is important. -->
            <classpath location="${instrumented.dir}"/>
            <classpath refid="classpath"/>
            <classpath refid="cobertura.classpath"/>

            <batchtest todir="${reports}/junit">
                <!--       <fileset dir="${build.dir}" includes="**/*Test*.class" excludes="**/TestStreamExporterVirtualSensor*.class"/> -->
                <fileset dir="${test.dir}">
                    <include name="**/*Test*.java"/>
                    <!--	      <exclude name="**/TestStreamExporterVirtualSensor.java"/>
                         <exclude name="**/TestContainerImpl.java"/> -->
                    <exclude name="**/TestDataPropogation.java"/>
                    <exclude name="**/TestVSensorLoader.java"/>
                    <exclude name="**/TestStreamSource.java"/>
                    <!--<exclude name="**/TestTupleBasedSliding.java"/>-->
                    <exclude name="**/TestSlidingWindowDefinition.java"/>
                    <exclude name="**/TestLocalTimeBasedSliding.java"/>
                    <exclude name="**/TestDataPacket.java"/>
                    <exclude name="**/TestSQLUtils.java"/>
                    <exclude name="**/TestStreamElement.java"/>
                    <exclude name="**/TestValidityTools.java"/>
                    <exclude name="**/TestGraph.java"/>
                    <exclude name="**/TestContainerImpl.java"/>
                    <exclude name="**/TestStorageManager.java"/>
                    <exclude name="**/TestEmpty.java"/>
                    <exclude name="**/TestUtils.java"/>
                    <!--<exclude name="**/TestAbstractWrapper.java"/>-->
                </fileset>
                <!--         	<fileset dir="${build.dir}" includes="**/TestStreamSource.*,**/TestAbstractWrapper.*,**/TestVSensorLoader.*" />-->
            </batchtest>
        </junit>

        <junitreport todir="${reports}/junit">
            <fileset dir="${reports}/junit">
                <include name="TEST-*.xml"/>
            </fileset>
            <report todir="${reports}/junit"/>
        </junitreport>

        <cobertura-report format="html" destdir="${reports}/cobertura" srcdir="${src.dir}"/>

        <fail if="tests.failed">At least one test Failed !</fail>
    </target>

    <target name="jar" depends="clean,bind">
        <mkdir dir="${jars}"/>
        <jar destfile="${jars}/${jar.file}" basedir="${build.dir}">
            <manifest>
                <attribute name="Built-By" value="ALI.SALEHI-at-EPFL.ch"/>
                <attribute name="Main-Class" value="gsn.Main"/>
            </manifest>
        </jar>
    </target>

    <target name="cleandb" depends="bind">
        <java classname="gsn.storage.CleanDB" fork="true" dir="${basedir}" classpathref="classpath"/>
    </target>
</project>

