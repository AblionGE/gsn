-------------------------------------------
Using the R feature in GSN (5 minute guide)
-------------------------------------------

This guide is for running R and GSN in the same host using ubuntu Linux. For the windows install, you will have to look for other tutorials for setting up R and GSN on windows.

-----------------------------------
1) Install R and the Rserve package
-----------------------------------

This assumes you already have a working copy of GSN installed somewhere. To install R in ubuntu use 'apt-get' as follows:

# sudo apt-get install r-base r-cran-rserve

-----------------------------------------
2) Install the r-cran-cairodevice package
-----------------------------------------

The cairo device package is needed for sending R plots to the graphics file device to export plots as jpeg/png images.

# sudo apt-get install r-cran-cairodevice

Note: Most of R scripts examples provided in the GSN source repository need to access this device for exporting plots in jpeg format and displaying them in GSN.

------------------------------------
3) Run R and start the Rserve server
------------------------------------

From the console/terminal type 'R' and [ENTER], then type library(Rserve) and then Rserve() to start Rserve server, see below

# R
R version 2.7.1 (2008-06-23)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'license()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(Rserve)
> Rserve()
Starting Rserve on port 6311 :
 /usr/lib/R/bin/R CMD /usr/lib/R/site-library/Rserve/libs//Rserve-bin.so 

This will start Rserve on port 6311, if you need to change the port number, just pass it as an argument to Rserve(port=8080). Rserve server is ready for accepting connections. Note that the server will run on the background.

-----------------------------------------------
4) Deploy example R scripts and virtual sensors
-----------------------------------------------

There are several example virtual sensors in the /virtual-sensors/statistics folder. Copy any of the XML files to the /virtual-sensors folder. Make sure the virtual sensor configuration parameters match your setup, for example:

<init-params>
	<param name="script">./virtual-sensors/statistics/multidimensional.r</param>
	<param name="window_size">100</param>
	<param name="step_size">10</param>
	<param name="server">localhost</param>
	<param name="port">6311</param>
	<param name="script_type">plot</param>
</init-params>

----------------------------------
5) Test and deploy Virtual Sensors
----------------------------------

Under the /virtual-sensors/statistics folder, there are several examples of virtual sensors and example R scripts. Deploy any of the examples and check http://localhost:22001/ to see if R is ploting anything. In the example R scripts there are some general guidelines on how to use R scripts with GSN.

That's all, for more detail configuration, please refer to the GSN documentation.

Antonio. 

